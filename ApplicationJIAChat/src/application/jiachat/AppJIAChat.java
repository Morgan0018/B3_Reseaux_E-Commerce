package application.jiachat;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import javax.swing.JOptionPane;
import requestresponse.multithread.abstracts.AbstractApplicationForm;

/**
 *
 * @author Morgan
 */
public class AppJIAChat extends AbstractApplicationForm {
	
	//<editor-fold defaultstate="collapsed" desc="Variables">
	private final ChatLoginDialog cld;
	private InetAddress groupAddress;
	MulticastSocket groupSocket;
	ThreadRcv tr;
	private String hostChat, clientName;
	private int portChat, clientId, numQ;
	//</editor-fold>

	/**
	 * Creates new form AppJIAChat
	 */
	public AppJIAChat() {
		super("appjiachat.properties");
		initComponents();
		//Show login dialog
		cld = new ChatLoginDialog(this, true);
		cld.setLocationRelativeTo(null);
		cld.setVisible(true);
		if (!cld.isLoginOK()) System.exit(1);
		String[] split = cld.getInfoUDP().split("#");
		System.out.println("Debug : " + split[0] + " | " + split[1] + " | " + split[2]);
		//init host & port
		hostChat = split[0];
		portChat = Integer.parseInt(split[1]);
		//init var
		clientId = Integer.parseInt(split[2]);
		clientName = cld.getClientName();
		this.numQ = 0;
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatButtonGroup = new javax.swing.ButtonGroup();
        typeLabel = new javax.swing.JLabel();
        questionRB = new javax.swing.JRadioButton();
        answerRB = new javax.swing.JRadioButton();
        infoRB = new javax.swing.JRadioButton();
        msgLabel = new javax.swing.JLabel();
        msgTF = new javax.swing.JTextField();
        jSeparator = new javax.swing.JSeparator();
        messagesLabel = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();
        msgRcvList = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Inpres Airport");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        typeLabel.setText("Type de message :");

        chatButtonGroup.add(questionRB);
        questionRB.setText("Question");

        chatButtonGroup.add(answerRB);
        answerRB.setText("Reponse");
        answerRB.setName(""); // NOI18N

        chatButtonGroup.add(infoRB);
        infoRB.setSelected(true);
        infoRB.setText("Information");

        msgLabel.setText("Message : ");

        messagesLabel.setText("Historique des messages");

        sendButton.setText("Envoyer");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(messagesLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(msgRcvList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(typeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(questionRB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(answerRB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(infoRB))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(msgLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(msgTF)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(questionRB)
                    .addComponent(answerRB)
                    .addComponent(infoRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msgLabel)
                    .addComponent(msgTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messagesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgRcvList, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * 
	 * @param evt 
	 */
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String msg = msgTF.getText();
		if (msg == null || "".equals(msg))
			JOptionPane.showMessageDialog(this, "Pas de message Ã  envoyer",
				"Attention", JOptionPane.WARNING_MESSAGE);
		else {
			if (infoRB.isSelected()) {
				msg = clientName + " > [INFO] " + msg;
			} else if (questionRB.isSelected()) {
				msg = clientName + " > [?:" + clientId + numQ++ + "] " + msg;
			} else if (answerRB.isSelected()) {
				msg = clientName + " > [REPONSE] " + msg;
			}
			try {
				sendGroupMessage(msg);
			} catch (IOException e) {
				System.err.println("Error : " + e.getMessage());
			}
		}
		msgTF.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

	/**
	 * 
	 * @param evt 
	 */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		try {
			groupAddress = InetAddress.getByName(hostChat);
			groupSocket = new MulticastSocket(portChat);
			groupSocket.joinGroup(groupAddress);
			tr = new ThreadRcv(cld.getClientName(), groupSocket, msgRcvList);
			tr.start();
			sendGroupMessage(clientName + " rejoint le groupe.");
		} catch (NumberFormatException | IOException e) {
			System.err.println("Error : " + e.getMessage());
		}
    }//GEN-LAST:event_formWindowOpened

	/**
	 * 
	 * @param evt 
	 */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		try {
			sendGroupMessage(clientName + " quitte le groupe.");
			tr.interrupt();
			groupSocket.leaveGroup(groupAddress);
			groupSocket.close();
		} catch (IOException ex) {
			System.err.println("Error : " + ex.getMessage());
		}
    }//GEN-LAST:event_formWindowClosing

	/**
	 * 
	 * @param msg
	 * @throws IOException 
	 */
	private void sendGroupMessage(String msg) throws IOException {
		DatagramPacket dp = new DatagramPacket(msg.getBytes(), msg.length(), groupAddress, portChat);
		groupSocket.send(dp);
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AppJIAChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AppJIAChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AppJIAChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AppJIAChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				AppJIAChat ajiac = new AppJIAChat();
				ajiac.setLocationRelativeTo(null);
				ajiac.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton answerRB;
    private javax.swing.ButtonGroup chatButtonGroup;
    private javax.swing.JRadioButton infoRB;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel messagesLabel;
    private javax.swing.JLabel msgLabel;
    private java.awt.List msgRcvList;
    private javax.swing.JTextField msgTF;
    private javax.swing.JRadioButton questionRB;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
